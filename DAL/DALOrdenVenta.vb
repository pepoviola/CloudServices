'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  DALOrdenVenta.vb
''  Implementation of the Class DALOrdenVenta
''  Generated by Enterprise Architect
''  Created on:      04-Jun-2014 11:19:15 AM
''  Original author: pepo
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Imports System.Data.SqlClient

Public Class DALOrdenVenta


    ''' 
    ''' <param name="oOV"></param>
    Public Function Actualizar(ByVal oOV As BE.BEOrdenVenta) As Boolean
        Actualizar = False
    End Function

    ''' 
    ''' <param name="oOV"></param>
    Public Sub Crear(ByVal oOV As BE.BEOrdenVenta)
        Dim conn As IDbConnection = dbManager.getConnection
        Try
            conn.Open()
            Dim trans As IDbTransaction = conn.BeginTransaction
            Try
                'obtengo el command
                Dim cmd As IDbCommand = dbManager.getCmd("InsertOVAndOutputId")

                'asocio la cx
                cmd.Connection = conn
                cmd.Transaction = trans

                'agrego los params
                dbManager.addParam(cmd, "@Fecha", oOV.Fecha)
                dbManager.addParam(cmd, "@Estado", 1)
                dbManager.addParam(cmd, "@Id_cliente", oOV.Cliente.ClienteId)

                Dim idParam As SqlParameter = CType(dbManager.addParam(cmd, "@id"), SqlParameter)
                idParam.Direction = ParameterDirection.Output

                cmd.ExecuteNonQuery()
                Dim idOV As Integer = idParam.Value

                ' ahora agrego los servicios
                For Each s As BE.BECloudServer In oOV.Servicios
                    Dim cmd_srv As IDbCommand = dbManager.getCmd("InsertSrvContratadoAndOutputId")

                    'asocio la cx
                    cmd_srv.Connection = conn
                    cmd_srv.Transaction = trans

                    ' agrego los params
                    dbManager.addParam(cmd_srv, "@Id_tipo_srv", s.Id)
                    dbManager.addParam(cmd_srv, "@Id_ov", idOV)
                    dbManager.addParam(cmd_srv, "@Precio", s.Precio)
                    dbManager.addParam(cmd_srv, "@Id_server_plataforma", 1)

                    idParam = CType(dbManager.addParam(cmd_srv, "@id"), SqlParameter)
                    idParam.Direction = ParameterDirection.Output

                    cmd_srv.ExecuteNonQuery()

                    Dim id_srv_padre As Integer = idParam.Value

                    ' los adicionales
                    For Each addon As BE.BEServicioBase In s.Srv_adicionales
                        Dim cmd_addon As IDbCommand = dbManager.getCmd("InsertSrvContratadoAndOutputId")

                        'asocio la cx
                        cmd_addon.Connection = conn
                        cmd_addon.Transaction = trans

                        ' agrego los params
                        dbManager.addParam(cmd_addon, "@Id_tipo_srv", addon.Id)
                        dbManager.addParam(cmd_addon, "@Id_ov", idOV)
                        dbManager.addParam(cmd_addon, "@Precio", addon.Precio)
                        dbManager.addParam(cmd_addon, "@Id_server_plataforma", 1)

                        idParam = CType(dbManager.addParam(cmd_addon, "@id"), SqlParameter)
                        idParam.Direction = ParameterDirection.Output

                        cmd_addon.ExecuteNonQuery()

                        Dim id_srv_hijo As Integer = idParam.Value

                        ' los relaciono
                        Dim cmd_rel As IDbCommand = dbManager.getCmd("InsertSrvContratadoRelacion")
                        'asocio la cx
                        cmd_rel.Connection = conn
                        cmd_rel.Transaction = trans
                        ' agrego los params
                        dbManager.addParam(cmd_rel, "@Id_padre", id_srv_padre)
                        dbManager.addParam(cmd_rel, "@Id_hijo", id_srv_hijo)

                        cmd_rel.ExecuteNonQuery()


                    Next

                Next

                trans.Commit()


            Catch ex As Exception
                trans.Rollback()
                Throw ex
            End Try

        Catch ex As Exception
            Throw ex
        Finally
            conn.Close()
        End Try


    End Sub

    ''' 
    ''' <param name="oOV"></param>
    Public Function Filtrar(ByVal oOV As BE.BEOrdenVenta) As List(Of BE.BEOrdenVenta)
        Filtrar = Nothing
    End Function


End Class ' DALOrdenVenta

